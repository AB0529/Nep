import { IOn, IDecorator, IInstance, IGuard, Client } from "..";
import { IDiscordParams, ICommandParams, ICommandInfos } from "../Types";
export declare class MetadataStorage {
    private static _instance;
    private _ons;
    private _guards;
    private _instances;
    static get Instance(): MetadataStorage;
    get Ons(): readonly IDecorator<IOn>[];
    AddOn(on: IDecorator<IOn>): void;
    AddGuard(guard: IDecorator<IGuard>): void;
    AddInstance(classType: IDecorator<IInstance>): void;
    Build(client: Client): void;
    setDiscordParams(discordInstance: InstanceType<any>, params: IDiscordParams): boolean;
    getCommands<InfoType = any>(forPrefix?: string): ICommandInfos<InfoType>[];
    getCommandsIntrospection(forPrefix?: string): IOn[];
    setCommandParams(discordInstance: InstanceType<any>, instanceMethod: Function, params: ICommandParams): boolean;
    compileOnForEvent(event: string, client: Client, once?: boolean): (...params: any[]) => Promise<void>;
    private executeBindedOn;
    private getReadonlyArray;
}
